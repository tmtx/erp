/** Declaration file generated by dts-gen */
declare module 'evergreen-ui' {
    export class Alert {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Autocomplete {
        constructor(...args: any[]);

        componentDidMount(): void;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class AutocompleteItem {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Avatar {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class BackButton {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            children: string;
        };

        static displayName: string;

        static propTypes: {
        };

    }

    export class Badge {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Button {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;

        props: any;
        context: any;
        state: any;
        forceUpdate: any;
        state: any;
        setState: any;
        refs: any;

        static displayName: string;

    }

    export class Card {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class Checkbox {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Code {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Combobox {
        constructor(props: any, context: any);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            disabled: boolean;
            isLoading: boolean;
            openOnFocus: boolean;
            width: number;
        };

        static displayName: string;

    }

    export class CornerDialog {
        constructor(props: any);

        componentDidUpdate(prevProps: any): void;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Dialog {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class FilePicker {
        constructor();

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class FormField {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            labelProps: {
                size: number;
            };
        };

        static displayName: string;

    }

    export class FormFieldDescription {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class FormFieldHint {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class FormFieldLabel {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class FormFieldValidationMessage {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Heading {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Icon {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class IconButton {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Image {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class InlineAlert {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Label {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class Li {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Link {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class ListItem {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Menu {
        constructor(...args: any[]);

        componentDidMount(): any;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Ol {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            size: number;
        };

        static displayName: string;

        static styles: {
            is: string;
            listStyle: string;
            listStylePosition: string;
            margin: number;
            marginLeft: string;
            padding: number;
        };

    }

    export class OptionsList {
        constructor(props: any, context: any);

        componentDidMount(): void;

        componentDidUpdate(prevProps: any): void;

        componentWillUnmount(): void;

        getFilteredOptions(): any;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class OrderedList {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            size: number;
        };

        static displayName: string;

        static styles: {
            is: string;
            listStyle: string;
            listStylePosition: string;
            margin: number;
            marginLeft: string;
            padding: number;
        };

    }

    export class Overlay {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Pane {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Paragraph {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Pill {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class Popover {
        constructor(props: any);

        componentWillUnmount(): void;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Portal {
        constructor();

        componentWillUnmount(): void;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Positioner {
        constructor(props: any, context: any, ...args: any[]);

        componentWillUnmount(): void;

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Pre {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class Radio {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class RadioGroup {
        constructor(props: any, context: any);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SearchInput {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SearchTableHeaderCell {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SegmentedControl {
        constructor(props: any, context: any);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            height: number;
        };

        static displayName: string;

    }

    export class Select {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SelectField {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            inputHeight: number;
            inputWidth: string;
        };

        static displayName: string;

    }

    export class SelectMenu {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SelectMenuContent {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SideSheet {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class SidebarTab {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            height: number;
        };

        static displayName: string;

        static propTypes: {
        };

        static styles: {
            justifyContent: string;
            marginBottom: number;
            marginX: number;
            paddingLeft: number;
            paddingX: number;
            width: string;
        };

    }

    export class Small {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Spinner {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Stack {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            value: number;
        };

        static displayName: string;

    }

    export class Strong {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class Switch {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Tab {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class TabNavigation {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Table {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class TableBody {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class TableCell {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class TableHead {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            accountForScrollbar: boolean;
            height: number;
        };

        static displayName: string;

    }

    export class TableHeaderCell {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

        static propTypes: {
        };

    }

    export class TableRow {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Tablist {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class TagInput {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Text {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class TextDropdownButton {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class TextInput {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class TextInputField {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            inputHeight: number;
            inputWidth: string;
        };

        static displayName: string;

    }

    export class TextTableCell {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            isNumber: boolean;
        };

        static displayName: string;

    }

    export class TextTableHeaderCell {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Textarea {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static displayName: string;

    }

    export class Tooltip {
        constructor(props: any, context: any);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            appearance: string;
            hideDelay: number;
            position: string;
        };

        static displayName: string;

    }

    export class Ul {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            size: number;
        };

        static displayName: string;

        static styles: {
            is: string;
            listStyle: string;
            listStylePosition: string;
            margin: number;
            marginLeft: string;
            padding: number;
        };

    }

    export class UnorderedList {
        constructor(...args: any[]);

        render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


        static defaultProps: {
            size: number;
        };

        static displayName: string;

        static styles: {
            is: string;
            listStyle: string;
            listStylePosition: string;
            margin: number;
            marginLeft: string;
            padding: number;
        };

    }

    export const IconNames: {
        ADD: string;
        ADD_COLUMN_LEFT: string;
        ADD_COLUMN_RIGHT: string;
        ADD_ROW_BOTTOM: string;
        ADD_ROW_TOP: string;
        ADD_TO_ARTIFACT: string;
        ADD_TO_FOLDER: string;
        AIRPLANE: string;
        ALIGNMENT_BOTTOM: string;
        ALIGNMENT_HORIZONTAL_CENTER: string;
        ALIGNMENT_LEFT: string;
        ALIGNMENT_RIGHT: string;
        ALIGNMENT_TOP: string;
        ALIGNMENT_VERTICAL_CENTER: string;
        ALIGN_CENTER: string;
        ALIGN_JUSTIFY: string;
        ALIGN_LEFT: string;
        ALIGN_RIGHT: string;
        ANNOTATION: string;
        APPLICATION: string;
        APPLICATIONS: string;
        ARROWS_HORIZONTAL: string;
        ARROWS_VERTICAL: string;
        ARROW_BOTTOM_LEFT: string;
        ARROW_BOTTOM_RIGHT: string;
        ARROW_DOWN: string;
        ARROW_LEFT: string;
        ARROW_RIGHT: string;
        ARROW_TOP_LEFT: string;
        ARROW_TOP_RIGHT: string;
        ARROW_UP: string;
        ASTERISK: string;
        AUTOMATIC_UPDATES: string;
        BADGE: string;
        BANK_ACCOUNT: string;
        BAN_CIRCLE: string;
        BARCODE: string;
        BLANK: string;
        BLOCKED_PERSON: string;
        BOLD: string;
        BOOK: string;
        BOOKMARK: string;
        BOX: string;
        BRIEFCASE: string;
        BUILD: string;
        CALCULATOR: string;
        CALENDAR: string;
        CAMERA: string;
        CARET_DOWN: string;
        CARET_LEFT: string;
        CARET_RIGHT: string;
        CARET_UP: string;
        CELL_TOWER: string;
        CHANGES: string;
        CHART: string;
        CHAT: string;
        CHEVRON_BACKWARD: string;
        CHEVRON_DOWN: string;
        CHEVRON_FORWARD: string;
        CHEVRON_LEFT: string;
        CHEVRON_RIGHT: string;
        CHEVRON_UP: string;
        CIRCLE: string;
        CIRCLE_ARROW_DOWN: string;
        CIRCLE_ARROW_LEFT: string;
        CIRCLE_ARROW_RIGHT: string;
        CIRCLE_ARROW_UP: string;
        CITATION: string;
        CLEAN: string;
        CLIPBOARD: string;
        CLOUD: string;
        CLOUD_DOWNLOAD: string;
        CLOUD_UPLOAD: string;
        CODE: string;
        CODE_BLOCK: string;
        COG: string;
        COLLAPSE_ALL: string;
        COLUMN_LAYOUT: string;
        COMMENT: string;
        COMPARISON: string;
        COMPASS: string;
        COMPRESSED: string;
        CONFIRM: string;
        CONSOLE: string;
        CONTRAST: string;
        CONTROL: string;
        CREDIT_CARD: string;
        CROSS: string;
        CROWN: string;
        CUBE: string;
        CUBE_ADD: string;
        CUBE_REMOVE: string;
        CURVED_RANGE_CHART: string;
        CUT: string;
        DASHBOARD: string;
        DATABASE: string;
        DELETE: string;
        DELTA: string;
        DERIVE_COLUMN: string;
        DESKTOP: string;
        DIAGRAM_TREE: string;
        DIRECTION_LEFT: string;
        DIRECTION_RIGHT: string;
        DISABLE: string;
        DOCUMENT: string;
        DOCUMENT_OPEN: string;
        DOCUMENT_SHARE: string;
        DOLLAR: string;
        DOT: string;
        DOUBLE_CARET_HORIZONTAL: string;
        DOUBLE_CARET_VERTICAL: string;
        DOUBLE_CHEVRON_DOWN: string;
        DOUBLE_CHEVRON_LEFT: string;
        DOUBLE_CHEVRON_RIGHT: string;
        DOUBLE_CHEVRON_UP: string;
        DOUGHNUT_CHART: string;
        DOWNLOAD: string;
        DRAG_HANDLE_HORIZONTAL: string;
        DRAG_HANDLE_VERTICAL: string;
        DRAW: string;
        DRIVE_TIME: string;
        DUPLICATE: string;
        EDIT: string;
        EJECT: string;
        ENDORSED: string;
        ENVELOPE: string;
        EQUALS: string;
        ERASER: string;
        ERROR: string;
        EURO: string;
        EXCHANGE: string;
        EXCLUDE_ROW: string;
        EXPAND_ALL: string;
        EXPORT: string;
        EYE_OFF: string;
        EYE_ON: string;
        EYE_OPEN: string;
        FAST_BACKWARD: string;
        FAST_FORWARD: string;
        FEED: string;
        FEED_SUBSCRIBED: string;
        FILM: string;
        FILTER: string;
        FILTER_KEEP: string;
        FILTER_LIST: string;
        FILTER_OPEN: string;
        FILTER_REMOVE: string;
        FLAG: string;
        FLAME: string;
        FLASH: string;
        FLOPPY_DISK: string;
        FLOWS: string;
        FLOW_BRANCH: string;
        FLOW_END: string;
        FLOW_LINEAR: string;
        FLOW_REVIEW: string;
        FLOW_REVIEW_BRANCH: string;
        FOLDER_CLOSE: string;
        FOLDER_NEW: string;
        FOLDER_OPEN: string;
        FOLDER_SHARED: string;
        FOLDER_SHARED_OPEN: string;
        FOLLOWER: string;
        FOLLOWING: string;
        FONT: string;
        FORK: string;
        FORM: string;
        FULLSCREEN: string;
        FULL_CIRCLE: string;
        FULL_STACKED_CHART: string;
        FUNCTION: string;
        GANTT_CHART: string;
        GEOLOCATION: string;
        GEOSEARCH: string;
        GIT_BRANCH: string;
        GIT_COMMIT: string;
        GIT_MERGE: string;
        GIT_NEW_BRANCH: string;
        GIT_PULL: string;
        GIT_PUSH: string;
        GIT_REPO: string;
        GLASS: string;
        GLOBE: string;
        GLOBE_NETWORK: string;
        GRAPH: string;
        GRAPH_REMOVE: string;
        GREATER_THAN: string;
        GREATER_THAN_OR_EQUAL_TO: string;
        GRID: string;
        GRID_VIEW: string;
        GROUPED_BAR_CHART: string;
        GROUP_OBJECTS: string;
        HAND: string;
        HAND_DOWN: string;
        HAND_LEFT: string;
        HAND_RIGHT: string;
        HAND_UP: string;
        HEADER: string;
        HEADER_ONE: string;
        HEADER_TWO: string;
        HEADSET: string;
        HEART: string;
        HEART_BROKEN: string;
        HEATMAP: string;
        HEAT_GRID: string;
        HELP: string;
        HELPER_MANAGEMENT: string;
        HIGHLIGHT: string;
        HISTORY: string;
        HOME: string;
        HORIZONTAL_BAR_CHART: string;
        HORIZONTAL_BAR_CHART_ASC: string;
        HORIZONTAL_BAR_CHART_DESC: string;
        HORIZONTAL_DISTRIBUTION: string;
        ID_NUMBER: string;
        IMAGE_ROTATE_LEFT: string;
        IMAGE_ROTATE_RIGHT: string;
        IMPORT: string;
        INBOX: string;
        INBOX_FILTERED: string;
        INBOX_GEO: string;
        INBOX_SEARCH: string;
        INBOX_UPDATE: string;
        INFO_SIGN: string;
        INHERITANCE: string;
        INNER_JOIN: string;
        INSERT: string;
        INTERSECTION: string;
        IP_ADDRESS: string;
        ISSUE: string;
        ISSUE_CLOSED: string;
        ISSUE_NEW: string;
        ITALIC: string;
        JOIN_TABLE: string;
        KEY: string;
        KEY_BACKSPACE: string;
        KEY_COMMAND: string;
        KEY_CONTROL: string;
        KEY_DELETE: string;
        KEY_ENTER: string;
        KEY_ESCAPE: string;
        KEY_OPTION: string;
        KEY_SHIFT: string;
        KEY_TAB: string;
        KNOWN_VEHICLE: string;
        LABEL: string;
        LAYER: string;
        LAYERS: string;
        LAYOUT: string;
        LAYOUT_AUTO: string;
        LAYOUT_BALLOON: string;
        LAYOUT_CIRCLE: string;
        LAYOUT_GRID: string;
        LAYOUT_GROUP_BY: string;
        LAYOUT_HIERARCHY: string;
        LAYOUT_LINEAR: string;
        LAYOUT_SKEW_GRID: string;
        LAYOUT_SORTED_CLUSTERS: string;
        LEFT_JOIN: string;
        LESS_THAN: string;
        LESS_THAN_OR_EQUAL_TO: string;
        LIFESAVER: string;
        LIGHTBULB: string;
        LINK: string;
        LIST: string;
        LIST_COLUMNS: string;
        LIST_DETAIL_VIEW: string;
        LOCATE: string;
        LOCK: string;
        LOG_IN: string;
        LOG_OUT: string;
        MANUAL: string;
        MANUALLY_ENTERED_DATA: string;
        MAP: string;
        MAP_CREATE: string;
        MAP_MARKER: string;
        MAXIMIZE: string;
        MEDIA: string;
        MENU: string;
        MENU_CLOSED: string;
        MENU_OPEN: string;
        MERGE_COLUMNS: string;
        MERGE_LINKS: string;
        MINIMIZE: string;
        MINUS: string;
        MOBILE_PHONE: string;
        MOBILE_VIDEO: string;
        MOON: string;
        MORE: string;
        MOUNTAIN: string;
        MOVE: string;
        MUGSHOT: string;
        MULTI_SELECT: string;
        MUSIC: string;
        NEW_GRID_ITEM: string;
        NEW_LINK: string;
        NEW_OBJECT: string;
        NEW_PERSON: string;
        NEW_PRESCRIPTION: string;
        NEW_TEXT_BOX: string;
        NINJA: string;
        NOTIFICATIONS: string;
        NOTIFICATIONS_UPDATED: string;
        NOT_EQUAL_TO: string;
        NUMBERED_LIST: string;
        NUMERICAL: string;
        OFFICE: string;
        OFFLINE: string;
        OIL_FIELD: string;
        ONE_COLUMN: string;
        OUTDATED: string;
        PAGE_LAYOUT: string;
        PANEL_STATS: string;
        PANEL_TABLE: string;
        PAPERCLIP: string;
        PARAGRAPH: string;
        PATH: string;
        PATH_SEARCH: string;
        PAUSE: string;
        PEOPLE: string;
        PERCENTAGE: string;
        PERSON: string;
        PHONE: string;
        PIE_CHART: string;
        PIN: string;
        PIVOT: string;
        PIVOT_TABLE: string;
        PLAY: string;
        PLUS: string;
        POLYGON_FILTER: string;
        POWER: string;
        PREDICTIVE_ANALYSIS: string;
        PRESCRIPTION: string;
        PRESENTATION: string;
        PRINT: string;
        PROJECTS: string;
        PROPERTIES: string;
        PROPERTY: string;
        PUBLISH_FUNCTION: string;
        PULSE: string;
        RANDOM: string;
        RECORD: string;
        REDO: string;
        REFRESH: string;
        REGRESSION_CHART: string;
        REMOVE: string;
        REMOVE_COLUMN: string;
        REMOVE_COLUMN_LEFT: string;
        REMOVE_COLUMN_RIGHT: string;
        REMOVE_ROW_BOTTOM: string;
        REMOVE_ROW_TOP: string;
        REPEAT: string;
        RESET: string;
        RESOLVE: string;
        RIG: string;
        RIGHT_JOIN: string;
        RING: string;
        ROTATE_DOCUMENT: string;
        ROTATE_PAGE: string;
        SATELLITE: string;
        SAVED: string;
        SCATTER_PLOT: string;
        SEARCH: string;
        SEARCH_AROUND: string;
        SEARCH_TEMPLATE: string;
        SEARCH_TEXT: string;
        SEGMENTED_CONTROL: string;
        SELECT: string;
        SELECTION: string;
        SEND_TO: string;
        SEND_TO_GRAPH: string;
        SEND_TO_MAP: string;
        SERIES_ADD: string;
        SERIES_CONFIGURATION: string;
        SERIES_DERIVED: string;
        SERIES_FILTERED: string;
        SERIES_SEARCH: string;
        SETTINGS: string;
        SHARE: string;
        SHIELD: string;
        SHOP: string;
        SHOPPING_CART: string;
        SIM_CARD: string;
        SLASH: string;
        SMALL_CROSS: string;
        SMALL_MINUS: string;
        SMALL_PLUS: string;
        SMALL_TICK: string;
        SNOWFLAKE: string;
        SOCIAL_MEDIA: string;
        SORT: string;
        SORT_ALPHABETICAL: string;
        SORT_ALPHABETICAL_DESC: string;
        SORT_ASC: string;
        SORT_DESC: string;
        SORT_NUMERICAL: string;
        SORT_NUMERICAL_DESC: string;
        SPLIT_COLUMNS: string;
        SQUARE: string;
        STACKED_CHART: string;
        STAR: string;
        STAR_EMPTY: string;
        STEP_BACKWARD: string;
        STEP_CHART: string;
        STEP_FORWARD: string;
        STOP: string;
        STRIKETHROUGH: string;
        STYLE: string;
        SWAP_HORIZONTAL: string;
        SWAP_VERTICAL: string;
        SYMBOL_CIRCLE: string;
        SYMBOL_CROSS: string;
        SYMBOL_DIAMOND: string;
        SYMBOL_SQUARE: string;
        SYMBOL_TRIANGLE_DOWN: string;
        SYMBOL_TRIANGLE_UP: string;
        TAG: string;
        TAKE_ACTION: string;
        TAXI: string;
        TEXT_HIGHLIGHT: string;
        TH: string;
        THUMBS_DOWN: string;
        THUMBS_UP: string;
        TH_DERIVED: string;
        TH_DISCONNECT: string;
        TH_FILTERED: string;
        TH_LIST: string;
        TICK: string;
        TICK_CIRCLE: string;
        TIME: string;
        TIMELINE_AREA_CHART: string;
        TIMELINE_BAR_CHART: string;
        TIMELINE_EVENTS: string;
        TIMELINE_LINE_CHART: string;
        TINT: string;
        TORCH: string;
        TRAIN: string;
        TRANSLATE: string;
        TRASH: string;
        TREE: string;
        TRENDING_DOWN: string;
        TRENDING_UP: string;
        TWO_COLUMNS: string;
        UNDERLINE: string;
        UNDO: string;
        UNGROUP_OBJECTS: string;
        UNKNOWN_VEHICLE: string;
        UNLOCK: string;
        UNPIN: string;
        UNRESOLVE: string;
        UPDATED: string;
        UPLOAD: string;
        USER: string;
        VARIABLE: string;
        VERTICAL_BAR_CHART_ASC: string;
        VERTICAL_BAR_CHART_DESC: string;
        VERTICAL_DISTRIBUTION: string;
        VIDEO: string;
        VOLUME_DOWN: string;
        VOLUME_OFF: string;
        VOLUME_UP: string;
        WALK: string;
        WARNING_SIGN: string;
        WATERFALL_CHART: string;
        WIDGET: string;
        WIDGET_BUTTON: string;
        WIDGET_FOOTER: string;
        WIDGET_HEADER: string;
        WRENCH: string;
        ZOOM_IN: string;
        ZOOM_OUT: string;
        ZOOM_TO_FIT: string;
    };

    export const Intent: {
        DANGER: string;
        NONE: string;
        SUCCESS: string;
        WARNING: string;
    };

    export const Position: {
        BOTTOM: string;
        BOTTOM_LEFT: string;
        BOTTOM_RIGHT: string;
        LEFT: string;
        RIGHT: string;
        TOP: string;
        TOP_LEFT: string;
        TOP_RIGHT: string;
    };

    export const StackingContext: {
        $$typeof: any;
        Consumer: {
            $$typeof: any;
            Consumer: any;
            Provider: {
                $$typeof: any;
            };
        };
        Provider: {
            $$typeof: any;
        };
    };

    export const StackingOrder: {
        FOCUSED: number;
        OVERLAY: number;
        POSITIONER: number;
        STACKING_CONTEXT: number;
        TOASTER: number;
    };

    export const ThemeConsumer: {
        $$typeof: any;
        Consumer: any;
        Provider: {
            $$typeof: any;
        };
    };

    export const ThemeContext: {
        $$typeof: any;
        Consumer: {
            $$typeof: any;
            Consumer: any;
            Provider: {
                $$typeof: any;
            };
        };
        Provider: {
            $$typeof: any;
        };
    };

    export const ThemeProvider: {
        $$typeof: any;
    };

    export function OptionShapePropType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    export function SelectedPropType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    export function extractStyles(...args: any[]): any;

    export function majorScale(x: any): any;

    export function minorScale(x: any): any;

    export function withTheme(WrappedComponent: any, ...args: any[]): any;

    export namespace Autocomplete {
        namespace defaultProps {
            const isFilterDisabled: boolean;

            const itemSize: number;

            const popoverMaxHeight: number;

            const popoverMinWidth: number;

            function itemToString(i: any): any;

            function renderItem(props: any): any;

            namespace renderItem {
                const displayName: string;

            }

        }

        namespace propTypes {
            function breakingChanges(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultHighlightedIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultInputValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultIsOpen(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultSelectedItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function environment(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function getA11yStatusMessage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function highlightedIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function id(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function inputValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isFilterDisabled(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isOpen(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function itemCount(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function itemSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function itemToString(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function items(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function itemsFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onInputValueChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onOuterClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onStateChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onUserAction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function popoverMaxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function popoverMinWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function render(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function renderItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedItemChanged(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function stateReducer(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace breakingChanges {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace children {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultHighlightedIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultInputValue {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultIsOpen {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultSelectedItem {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace environment {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace getA11yStatusMessage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace highlightedIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace id {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace inputValue {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isFilterDisabled {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isOpen {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace itemCount {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace itemSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace itemToString {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace itemsFilter {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onInputValueChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onOuterClick {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onStateChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onUserAction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace popoverMaxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace popoverMinWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace render {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace renderItem {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace selectedItem {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace selectedItemChanged {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace stateReducer {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace title {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace AutocompleteItem {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isHighlighted(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isSelected(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function style(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isHighlighted {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isSelected {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace style {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Combobox {
        namespace propTypes {
            function autocompleteProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function buttonProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultSelectedItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function disabled(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function inputProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isLoading(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function itemToString(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function items(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function openOnFocus(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeholder(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selectedItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace autocompleteProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace buttonProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultSelectedItem {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace disabled {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace inputProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isLoading {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace itemToString {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace openOnFocus {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeholder {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace selectedItem {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace CornerDialog {
        namespace defaultProps {
            const cancelLabel: string;

            const confirmLabel: string;

            const hasCancel: boolean;

            const hasClose: boolean;

            const hasFooter: boolean;

            const intent: string;

            const width: number;

            function onCancel(close: any): any;

            function onCloseComplete(): void;

            function onConfirm(close: any): any;

        }

        namespace propTypes {
            function cancelLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function confirmLabel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function containerProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasCancel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasClose(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasFooter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function intent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isShown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onCancel(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onCloseComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onConfirm(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onOpenComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace cancelLabel {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace confirmLabel {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace containerProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasCancel {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasClose {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasFooter {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isShown {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onCancel {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onCloseComplete {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onConfirm {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onOpenComplete {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace title {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace FilePicker {
        namespace propTypes {
            function accept(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function capture(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function disabled(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function multiple(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function name(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onBlur(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function required(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace accept {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace capture {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace disabled {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace multiple {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace name {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onBlur {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace required {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace FormField {
        namespace propTypes {
            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function description(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hint(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function labelFor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function validationMessage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace description {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hint {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isRequired {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace labelFor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace validationMessage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace FormFieldLabel {
        namespace propTypes {
            function isAstrixShown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace isAstrixShown {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Image {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace src {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Li {
        namespace propTypes {
            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function iconColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace icon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace iconColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace ListItem {
        namespace propTypes {
            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function iconColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace icon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace iconColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Menu {
        class Divider {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class Group {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class Item {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class Option {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class OptionsGroup {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        namespace Group {
            namespace propTypes {
                function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                namespace children {
                    // Too-deep object hierarchy from evergreen_ui.Menu.Group.propTypes.children
                    const isRequired: any;

                }

                namespace title {
                    // Too-deep object hierarchy from evergreen_ui.Menu.Group.propTypes.title
                    const isRequired: any;

                }

            }

        }

        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace children {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Ol {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function size(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace OptionShapePropType {
        function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    }

    export namespace OptionsList {
        namespace defaultProps {
            const defaultSearchValue: string;

            const filterIcon: string;

            const filterPlaceholder: string;

            const optionSize: number;

            const options: any[];

            const selected: any[];

            function onDeselect(): void;

            function onFilterChange(): void;

            function onSelect(): void;

            function renderItem(props: any): any;

            namespace renderItem {
                const displayName: string;

            }

        }

        namespace propTypes {
            function close(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function closeOnSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultSearchValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterPlaceholder(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isMultiSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onDeselect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onFilterChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function optionSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function optionsFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function renderItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selected(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace close {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace closeOnSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultSearchValue {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace filterIcon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace filterPlaceholder {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasFilter {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isMultiSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onDeselect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onFilterChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace optionSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace options {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace optionsFilter {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace renderItem {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace selected {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace OrderedList {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function size(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Popover {
        namespace defaultProps {
            const animationDuration: number;

            const bringFocusInside: boolean;

            const minHeight: number;

            const minWidth: number;

            const position: string;

            const shouldCloseOnExternalClick: boolean;

            const trigger: string;

            function onBodyClick(): void;

            function onClose(): void;

            function onCloseComplete(): void;

            function onOpen(): void;

            function onOpenComplete(): void;

        }

        namespace propTypes {
            function animationDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bringFocusInside(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function content(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isShown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onBodyClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onClose(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onCloseComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onOpen(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onOpenComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function shouldCloseOnExternalClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function statelessProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function trigger(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace animationDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bringFocusInside {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isShown {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace shouldCloseOnExternalClick {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace statelessProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace trigger {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Portal {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    export namespace Positioner {
        namespace defaultProps {
            const animationDuration: number;

            const bodyOffset: number;

            const initialScale: number;

            const position: string;

            const targetOffset: number;

            function innerRef(): void;

            function onCloseComplete(): void;

            function onOpenComplete(): void;

        }

        namespace propTypes {
            function animationDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bodyOffset(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function initialScale(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isShown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onCloseComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onOpenComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function target(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function targetOffset(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace isShown {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace RadioGroup {
        namespace defaultProps {
            const isRequired: boolean;

            const options: any[];

            const size: number;

            function onChange(): void;

        }

        namespace propTypes {
            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function size(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultValue {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace label {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace value {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace SearchTableHeaderCell {
        namespace defaultProps {
            const icon: string;

            const placeholder: string;

            const spellCheck: boolean;

            function onChange(): void;

        }

        namespace propTypes {
            function autoFocus(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeholder(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function spellCheck(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace autoFocus {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace icon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeholder {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace spellCheck {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace value {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace SegmentedControl {
        namespace propTypes {
            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function defaultValue(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function name(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace defaultValue {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace name {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace value {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace SelectField {
        namespace propTypes {
            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function description(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hint(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function inputHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function inputWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function labelFor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function validationMessage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace description {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hint {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace inputHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace inputWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isRequired {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace labelFor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace validationMessage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace SelectMenu {
        namespace defaultProps {
            const closeOnSelect: boolean;

            const filterIcon: string;

            const filterPlaceholder: string;

            const height: number;

            const isMultiSelect: boolean;

            const position: string;

            const width: number;

            function onDeselect(): void;

            function onSelect(): void;

        }

        namespace propTypes {
            function closeOnSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function detailView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function emptyView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterPlaceholder(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isMultiSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onDeselect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onFilterChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function selected(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function titleView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace closeOnSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace detailView {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace emptyView {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace filterIcon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace filterPlaceholder {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasFilter {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasTitle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isMultiSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onDeselect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onFilterChange {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace options {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace selected {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace title {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace titleView {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace SelectMenuContent {
        namespace defaultProps {
            const hasFilter: boolean;

            const hasTitle: boolean;

            const options: any[];

            function titleView(_ref: any): any;

            namespace titleView {
                const displayName: string;

                namespace propTypes {
                    // Too-deep object hierarchy from evergreen_ui.SelectMenuContent.defaultProps.titleView.propTypes
                    const close: any;

                    // Too-deep object hierarchy from evergreen_ui.SelectMenuContent.defaultProps.titleView.propTypes
                    const headerHeight: any;

                    // Too-deep object hierarchy from evergreen_ui.SelectMenuContent.defaultProps.titleView.propTypes
                    const title: any;

                }

            }

        }

        namespace propTypes {
            function close(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function closeOnSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function detailView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function emptyView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterIcon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function filterPlaceholder(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasFilter(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hasTitle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function headerHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isMultiSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function title(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function titleView(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace close {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace closeOnSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace detailView {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace emptyView {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace filterIcon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace filterPlaceholder {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasFilter {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hasTitle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace headerHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isMultiSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace options {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace title {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace titleView {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace SelectedPropType {
        function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    }

    export namespace SideSheet {
        namespace defaultProps {
            const position: string;

            const shouldCloseOnEscapePress: boolean;

            const shouldCloseOnOverlayClick: boolean;

            const width: number;

            function onCloseComplete(): void;

            function onOpenComplete(): void;

        }

        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function containerProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isShown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onBeforeClose(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onCloseComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function onOpenComplete(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function preventBodyScrolling(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function shouldCloseOnEscapePress(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function shouldCloseOnOverlayClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace containerProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isShown {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onBeforeClose {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onCloseComplete {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace onOpenComplete {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace preventBodyScrolling {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace shouldCloseOnEscapePress {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace shouldCloseOnOverlayClick {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Stack {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace value {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace TabNavigation {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Table {
        class Body {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

            static propTypes: {
            };

        }

        class Cell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class EditableCell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class Head {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static defaultProps: {
                accountForScrollbar: boolean;
                height: number;
            };

            static displayName: string;

        }

        class HeaderCell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

            static propTypes: {
            };

        }

        class Row {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class SearchHeaderCell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class SelectMenuCell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class TextCell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static defaultProps: {
                isNumber: boolean;
            };

            static displayName: string;

        }

        class TextHeaderCell {
            constructor(...args: any[]);

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static displayName: string;

        }

        class VirtualBody {
            constructor(props: any);

            componentDidMount(): void;

            componentWillUnmount(): void;

            render(): any;
refs: any;

props: any;
context: any;
state: any;
forceUpdate: any;
state: any;
setState: any;


            static defaultProps: {
                allowAutoHeight: boolean;
                defaultHeight: number;
                overscanCount: number;
                useAverageAutoHeightEstimation: boolean;
            };

            static displayName: string;

            static getDerivedStateFromProps(props: any, state: any): any;

        }

        namespace Head {
            namespace propTypes {
                function accountForScrollbar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                namespace accountForScrollbar {
                    // Too-deep object hierarchy from evergreen_ui.Table.Head.propTypes.accountForScrollbar
                    const isRequired: any;

                }

            }

        }

        namespace SearchHeaderCell {
            namespace defaultProps {
                const icon: string;

                const placeholder: string;

                const spellCheck: boolean;

                function onChange(): void;

            }

            namespace propTypes {
                function autoFocus(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function onChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function placeholder(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function spellCheck(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function value(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                namespace autoFocus {
                    // Too-deep object hierarchy from evergreen_ui.Table.SearchHeaderCell.propTypes.autoFocus
                    const isRequired: any;

                }

                namespace icon {
                    // Too-deep object hierarchy from evergreen_ui.Table.SearchHeaderCell.propTypes.icon
                    const isRequired: any;

                }

                namespace onChange {
                    // Too-deep object hierarchy from evergreen_ui.Table.SearchHeaderCell.propTypes.onChange
                    const isRequired: any;

                }

                namespace placeholder {
                    // Too-deep object hierarchy from evergreen_ui.Table.SearchHeaderCell.propTypes.placeholder
                    const isRequired: any;

                }

                namespace spellCheck {
                    // Too-deep object hierarchy from evergreen_ui.Table.SearchHeaderCell.propTypes.spellCheck
                    const isRequired: any;

                }

                namespace value {
                    // Too-deep object hierarchy from evergreen_ui.Table.SearchHeaderCell.propTypes.value
                    const isRequired: any;

                }

            }

        }

        namespace TextCell {
            namespace propTypes {
                function isNumber(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function textProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                namespace textProps {
                    // Too-deep object hierarchy from evergreen_ui.Table.TextCell.propTypes.textProps
                    const isRequired: any;

                }

            }

        }

        namespace TextHeaderCell {
            namespace propTypes {
                function textProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                namespace textProps {
                    // Too-deep object hierarchy from evergreen_ui.Table.TextHeaderCell.propTypes.textProps
                    const isRequired: any;

                }

            }

        }

        namespace VirtualBody {
            namespace propTypes {
                function allowAutoHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function defaultHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function estimatedItemSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function onScroll(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function overscanCount(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function scrollOffset(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function scrollToAlignment(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function scrollToIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                function useAverageAutoHeightEstimation(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

                namespace allowAutoHeight {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.allowAutoHeight
                    const isRequired: any;

                }

                namespace children {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.children
                    const isRequired: any;

                }

                namespace defaultHeight {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.defaultHeight
                    const isRequired: any;

                }

                namespace estimatedItemSize {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.estimatedItemSize
                    const isRequired: any;

                }

                namespace onScroll {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.onScroll
                    const isRequired: any;

                }

                namespace scrollOffset {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.scrollOffset
                    const isRequired: any;

                }

                namespace scrollToAlignment {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.scrollToAlignment
                    const isRequired: any;

                }

                namespace scrollToIndex {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.scrollToIndex
                    const isRequired: any;

                }

                namespace useAverageAutoHeightEstimation {
                    // Too-deep object hierarchy from evergreen_ui.Table.VirtualBody.propTypes.useAverageAutoHeightEstimation
                    const isRequired: any;

                }

            }

        }

    }

    export namespace TableHead {
        namespace propTypes {
            function accountForScrollbar(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace accountForScrollbar {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Tablist {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace TextInputField {
        namespace propTypes {
            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function description(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hint(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function inputHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function inputWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function labelFor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function validationMessage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace description {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace hint {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace inputHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace inputWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace isRequired {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace labelFor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace validationMessage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace TextTableCell {
        namespace propTypes {
            function isNumber(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace textProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace TextTableHeaderCell {
        namespace propTypes {
            function textProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace textProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Tooltip {
        namespace propTypes {
            function appearance(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function content(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function hideDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function isShown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function statelessProps(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace isShown {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace statelessProps {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace Ul {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function iconColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function size(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace icon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace iconColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace UnorderedList {
        namespace propTypes {
            function alignContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function alignSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function background(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundBlendMode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundClip(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundPosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundRepeat(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function backgroundSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function border(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderBottomWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderLeftWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderRightWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopLeftRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopRightRadius(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderTopWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function borderWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function bottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function boxSizing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clear(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function clearfix(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function color(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function columnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function css(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function cursor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function display(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexBasis(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexDirection(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexGrow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexShrink(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function flexWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function font(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontFamily(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontSize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontVariant(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function fontWeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function grid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridArea(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoFlow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridAutoRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumn(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridColumnStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowEnd(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridRowStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateAreas(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateColumns(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function gridTemplateRows(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function icon(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function iconColor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function innerRef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function is(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifyItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function justifySelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function left(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function letterSpacing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function lineHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleImage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStylePosition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function listStyleType(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function margin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function marginY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function maxWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minHeight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function minWidth(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function opacity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function order(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function overflowY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function padding(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingBottom(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingLeft(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingRight(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingTop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingX(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function paddingY(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeContent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeItems(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function placeSelf(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function pointerEvents(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function right(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function rowGap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function size(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textAlign(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textDecoration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textOverflow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textShadow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function textTransform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function top(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transform(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transformOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transition(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDelay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionDuration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionProperty(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function transitionTimingFunction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function userSelect(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function visibility(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function whiteSpace(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordBreak(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function wordWrap(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function zIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace alignContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace alignSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace background {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundBlendMode {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundClip {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundPosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundRepeat {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace backgroundSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace border {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderBottomWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderLeftWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderRightWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopLeftRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopRightRadius {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderTopWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace borderWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace bottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace boxSizing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clear {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace clearfix {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace color {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace columnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace css {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace cursor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace display {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexBasis {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexDirection {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexGrow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexShrink {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace flexWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace font {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontFamily {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontSize {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontVariant {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace fontWeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace grid {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridArea {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoFlow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridAutoRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumn {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridColumnStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowEnd {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridRowStart {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplate {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateAreas {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateColumns {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace gridTemplateRows {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace height {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace icon {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace iconColor {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace innerRef {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace is {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifyItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace justifySelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace left {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace letterSpacing {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace lineHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyle {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleImage {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStylePosition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace listStyleType {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace margin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace marginY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace maxWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minHeight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace minWidth {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace opacity {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace order {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace overflowY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace padding {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingBottom {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingLeft {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingRight {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingTop {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingX {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace paddingY {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeContent {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeItems {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace placeSelf {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace pointerEvents {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace position {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace right {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace rowGap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textAlign {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textDecoration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textOverflow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textShadow {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace textTransform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace top {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transform {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transformOrigin {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transition {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDelay {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionDuration {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionProperty {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace transitionTimingFunction {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace userSelect {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace visibility {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace whiteSpace {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace width {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordBreak {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace wordWrap {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

            namespace zIndex {
                function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            }

        }

    }

    export namespace defaultTheme {
        const avatarColors: string[];

        const badgeColors: string[];

        const colors: {
            background: {
                blueTint: string;
                greenTint: string;
                orangeTint: string;
                overlay: string;
                purpleTint: string;
                redTint: string;
                tealTint: string;
                tint1: string;
                tint2: string;
                yellowTint: string;
            };
            border: {
                default: string;
                muted: string;
            };
            icon: {
                danger: string;
                default: string;
                disabled: string;
                info: string;
                muted: string;
                selected: string;
                success: string;
                warning: string;
            };
            intent: {
                danger: string;
                none: string;
                success: string;
                warning: string;
            };
            text: {
                danger: string;
                dark: string;
                default: string;
                info: string;
                muted: string;
                selected: string;
                success: string;
                warning: string;
            };
        };

        const elevations: string[];

        const fills: {
            options: string[];
            solid: {
                blue: {
                    backgroundColor: string;
                    color: string;
                };
                green: {
                    backgroundColor: string;
                    color: string;
                };
                neutral: {
                    backgroundColor: string;
                    color: string;
                };
                orange: {
                    backgroundColor: string;
                    color: string;
                };
                purple: {
                    backgroundColor: string;
                    color: string;
                };
                red: {
                    backgroundColor: string;
                    color: string;
                };
                teal: {
                    backgroundColor: string;
                    color: string;
                };
                yellow: {
                    backgroundColor: string;
                    color: string;
                };
            };
            subtle: {
                blue: {
                    backgroundColor: string;
                    color: string;
                };
                green: {
                    backgroundColor: string;
                    color: string;
                };
                neutral: {
                    backgroundColor: string;
                    color: string;
                };
                orange: {
                    backgroundColor: string;
                    color: string;
                };
                purple: {
                    backgroundColor: string;
                    color: string;
                };
                red: {
                    backgroundColor: string;
                    color: string;
                };
                teal: {
                    backgroundColor: string;
                    color: string;
                };
                yellow: {
                    backgroundColor: string;
                    color: string;
                };
            };
        };

        const overlayBackgroundColor: string;

        const palette: {
            blue: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            green: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            neutral: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            orange: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            purple: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            red: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            teal: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
            yellow: {
                base: string;
                dark: string;
                light: string;
                lightest: string;
            };
        };

        const scales: {
            blue: {
                B1: string;
                B10: string;
                B1A: string;
                B2: string;
                B2A: string;
                B3: string;
                B3A: string;
                B4: string;
                B4A: string;
                B5: string;
                B5A: string;
                B6: string;
                B6A: string;
                B7: string;
                B7A: string;
                B8: string;
                B8A: string;
                B9: string;
            };
            neutral: {
                N1: string;
                N10: string;
                N1A: string;
                N2: string;
                N2A: string;
                N3: string;
                N3A: string;
                N4: string;
                N4A: string;
                N5: string;
                N5A: string;
                N6: string;
                N6A: string;
                N7: string;
                N7A: string;
                N8: string;
                N8A: string;
                N9: string;
            };
        };

        const spinnerColor: string;

        const typography: {
            fontFamilies: {
                display: string;
                mono: string;
                ui: string;
            };
            headings: {
                "100": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                    textTransform: string;
                };
                "200": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "300": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "400": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "500": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "600": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "700": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "800": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "900": {
                    color: string;
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
            };
            paragraph: {
                "300": {
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "400": {
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "500": {
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
            };
            text: {
                "300": {
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "400": {
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "500": {
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
                "600": {
                    fontFamily: string;
                    fontSize: string;
                    fontWeight: number;
                    letterSpacing: string;
                    lineHeight: string;
                    marginTop: number;
                };
            };
        };

        function getAlertProps(_ref: any): any;

        function getAvatarInitialsFontSize(size: any, sizeLimitOneCharacter: any): any;

        function getAvatarProps(_ref: any): any;

        function getBackground(background: any): any;

        function getBadgeClassName(...args: any[]): any;

        function getBadgeProps(_ref: any): any;

        function getBorderRadiusForControlHeight(height: any): any;

        function getButtonClassName(...args: any[]): any;

        function getCheckboxClassName(...args: any[]): any;

        function getCodeProps(appearance: any): any;

        function getElevation(level: any): any;

        function getFontFamily(fontFamily: any): any;

        function getHeadingStyle(size: any): any;

        function getIconColor(color: any): any;

        function getIconForIntent(intent: any): any;

        function getIconSizeForButton(height: any): any;

        function getIconSizeForIconButton(height: any): any;

        function getIconSizeForInput(height: any): any;

        function getIconSizeForSelect(height: any): any;

        function getLinkClassName(...args: any[]): any;

        function getMenuItemClassName(...args: any[]): any;

        function getParagraphStyle(size: any): any;

        function getRadioClassName(...args: any[]): any;

        function getRowClassName(...args: any[]): any;

        function getSegmentedControlRadioClassName(...args: any[]): any;

        function getSelectClassName(...args: any[]): any;

        function getSwitchClassName(...args: any[]): any;

        function getTabClassName(...args: any[]): any;

        function getTableCellClassName(...args: any[]): any;

        function getTagInputClassName(...args: any[]): any;

        function getTextColor(color: any): any;

        function getTextDropdownButtonClassName(...args: any[]): any;

        function getTextInputClassName(...args: any[]): any;

        function getTextSizeForControlHeight(height: any): any;

        function getTextStyle(size: any): any;

        function getTextareaClassName(...args: any[]): any;

        function getTooltipProps(appearance: any): any;

    }

    export namespace toaster {
        function closeAll(): any;

        function danger(title: any, ...args: any[]): any;

        function getToasts(): any;

        function notify(title: any, ...args: any[]): any;

        function success(title: any, ...args: any[]): any;

        function warning(title: any, ...args: any[]): any;

    }
}
